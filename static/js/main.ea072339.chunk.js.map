{"version":3,"sources":["modules/todo/components/ToDo.jsx","modules/app/logo.svg","modules/app/App.jsx","modules/app/reportWebVitals.js","modules/app/index.jsx"],"names":["useStyles","makeStyles","theme","root","width","maxWidth","ToDo","classes","useState","checked","setChecked","toDoItem","setToDo","useEffect","fetch","then","response","status","json","data","console","log","catch","err","slice","length","List","className","map","item","value","labelId","ListItem","role","undefined","dense","button","onClick","currentIndex","indexOf","newChecked","push","splice","ListItemIcon","Checkbox","edge","tabIndex","disableRipple","inputProps","ListItemText","id","primary","title","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAQMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,MAAO,OACPC,SAAU,SAMP,SAASC,IACd,IAAMC,EAAUP,IADK,EAESQ,mBAAS,CAAC,IAFnB,mBAEdC,EAFc,KAELC,EAFK,OAgBOF,mBAAS,IAhBhB,mBAgBdG,EAhBc,KAgBJC,EAhBI,KAkDrB,OARAC,qBAAU,WApBDC,MAFK,8CAGTC,MAAK,SAAUC,GACd,GAAwB,MAApBA,EAASC,OAMb,OAAOD,EAASE,OAAOH,MAAK,SAAUI,GAGpC,OAAOA,KARPC,QAAQC,IAAI,gDAAkDL,EAASC,WAW1EK,OAAM,SAAUC,GACfH,QAAQC,IAAI,kBAAmBE,MAOzBR,MAAK,SAAAI,GACbA,EAAOA,EAAKK,MAAM,EAAG,GACrBZ,EAAQO,QAET,IAGD,gCACE,2CAECR,EAASc,OAAS,EACjB,cAACC,EAAA,EAAD,CAAMC,UAAWpB,EAAQJ,KAAzB,SACGQ,EAASiB,KAAI,SAAAC,GACZ,IArDWC,EAqDLC,EAAO,8BAA0BF,GAEvC,OACE,eAACG,EAAA,EAAD,CAAqBC,UAAMC,EAAWC,OAAK,EAACC,QAAM,EAACC,SAxD1CP,EAwDgED,EAxDvD,WAC5B,IAAMS,EAAe7B,EAAQ8B,QAAQT,GAC/BU,EAAU,YAAO/B,IAED,IAAlB6B,EACFE,EAAWC,KAAKX,GAEhBU,EAAWE,OAAOJ,EAAc,GAGlC5B,EAAW8B,KA8CD,UACE,cAACG,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLpC,SAAoC,IAA3BA,EAAQ8B,QAAQV,GACzBiB,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmBjB,OAGrC,cAACkB,EAAA,EAAD,CAAcC,GAAInB,EAASoB,QAAO,UAAKtB,EAAKuB,WAV/BvB,QAgBrB,2C,UC7FO,MAA0B,iCCIlC,SAASwB,IACd,OACE,qBAAK1B,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAK2B,IAAKC,EAAM5B,UAAU,WAAW6B,IAAI,SACzC,cAAClD,EAAD,S,UCGOmD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ea072339.chunk.js","sourcesContent":["import Checkbox from '@material-ui/core/Checkbox';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    //marginTop: '35px',\r\n    //marginLeft: '10px',\r\n  },\r\n}));\r\n\r\nexport function ToDo() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState([0]);\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n  const [toDoItem, setToDo] = useState([]);\r\n\r\n  //Call API (call data from json file)\r\n  function callAPI() {\r\n    const url = 'https://jsonplaceholder.typicode.com/todos';\r\n\r\n    return fetch(url)\r\n      .then(function (response) {\r\n        if (response.status !== 200) {\r\n          console.log('Looks like there was a problem. Status Code: ' + response.status);\r\n          return;\r\n        }\r\n\r\n        // Examine the text in the response\r\n        return response.json().then(function (data) {\r\n          // console.log('response data', data[3].title);\r\n\r\n          return data;\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log('Fetch Error :-S', err);\r\n      });\r\n  }\r\n\r\n  //To render by default\r\n  useEffect(() => {\r\n    //use\r\n    callAPI().then(data => {\r\n      data = data.slice(0, 3);\r\n      setToDo(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <p>To Do List</p>\r\n\r\n      {toDoItem.length > 0 ? (\r\n        <List className={classes.root}>\r\n          {toDoItem.map(item => {\r\n            const labelId = `checkbox-list-label-${item}`;\r\n\r\n            return (\r\n              <ListItem key={item} role={undefined} dense button onClick={handleToggle(item)}>\r\n                <ListItemIcon>\r\n                  <Checkbox\r\n                    edge=\"start\"\r\n                    checked={checked.indexOf(item) !== -1}\r\n                    tabIndex={-1}\r\n                    disableRipple\r\n                    inputProps={{ 'aria-labelledby': labelId }}\r\n                  />\r\n                </ListItemIcon>\r\n                <ListItemText id={labelId} primary={`${item.title}`} />\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n      ) : (\r\n        <p>No Data</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { ToDo } from '../todo/components/ToDo';\nimport './App.css';\nimport logo from './logo.svg';\n\nexport function App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <ToDo></ToDo>\n      </header>\n    </div>\n  );\n}\n\n//export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}